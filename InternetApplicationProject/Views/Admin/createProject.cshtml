@model InternetApplicationProject.Models.Projects
@using InternetApplicationProject.Models

@{
    ViewBag.Title = "createProject";
}

<h2>createProject</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Projects</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.project_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.project_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.project_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> customersIDs = new List<SelectListItem>();
                foreach (var id in (new handleUsers()).getAvailableCustomersId())
                {
                    customersIDs.Add(
                        new SelectListItem
                        {
                            Text = id.ToString(),
                            Value = id.ToString()
                        }
                    );
                }
                <div class="col-md-10">
                    @Html.LabelFor(model => model.customerid, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownListFor(model => model.customerid, customersIDs, new { @class = "form-control" })
                </div>

            }
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "True",
                    Value = "1",
                });
                listItems.Add(new SelectListItem
                {
                    Text = "False",
                    Value = "0"
                });
            }
            <div class="col-md-10">
                @Html.LabelFor(model => model.projectState, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.projectState, listItems, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> listItems2 = new List<SelectListItem>();
                listItems2.Add(new SelectListItem
                {
                    Text = "True",
                    Value = "1",
                });
                listItems2.Add(new SelectListItem
                {
                    Text = "False",
                    Value = "0"
                });
            }
            <div class="col-md-10">
                @Html.LabelFor(model => model.projectDelevered, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.projectDelevered, listItems2, new { @class = "form-control" })
            </div>

        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
