@model InternetApplicationProject.Models.requestsForTeam
@using InternetApplicationProject.Models;

@{
    ViewBag.Title = "RequestMember";
    handleUsers users = new handleUsers();
    handleTeamLeader leaders = new handleTeamLeader();
    handleProjects projects = new handleProjects();
    List<SelectListItem> listItems = new List<SelectListItem>();
    List<SelectListItem> listItems2 = new List<SelectListItem>();
    Model.role = (int)TempData["ID"];
}

<h2>RequestMember</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>requestsForTeam</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.role)

    <div class="form-group">
        @Html.LabelFor(model => model.projectID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">



            @foreach (var item in leaders.getJoinedProjects((int)TempData["ID"]))
            {
                if (! projects.isProject(item.projectID)) { continue; }
                if (item.memberOne != 0 && item.memberTwo != 0 && item.memberThree != 0)
                { continue; }
                listItems.Add(new SelectListItem
                {
                    Text = projects.getProject(item.projectID).project_Name,
                    Value = item.projectID.ToString()
                });
            }

            @Html.DropDownListFor(model => model.projectID, listItems, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.projectID, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.memberID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @foreach (var item in users.getMembers())
            {
                if (!users.isUser(item.Id)) { continue; }
                listItems2.Add(new SelectListItem
                {
                    Text = item.FirstName + " " + item.LastName,
                    Value = item.Id.ToString()
                });
            }

            @Html.DropDownListFor(model => model.memberID, listItems2, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.memberID, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}